@page "/tables"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using Table4U
@using Table4U.Data
@implements IAsyncDisposable
@inject IDbContextFactory<Table4U.Data.Table4UContext> DbFactory
@attribute [StreamRendering]
@rendermode InteractiveServer

<PageTitle>Tables</PageTitle>

<h1>Tables</h1>

    
<a class="my-3" href="tables/create"><span class="bi bi-plus-square-fill" aria-hidden="true"></span></a>

@if (context == null)
{
    <p>Loading...</p>
}
else
{
    <QuickGrid Class="table" Items="context?.Table">
        <PropertyColumn Property="table => table.Id" class="align-content-center justify-content-center" />
        <PropertyColumn Property="table => table.Slot" class="align-content-center justify-content-center" />
        <PropertyColumn Property="table => table.IsReserved" class="align-content-center justify-content-center" />

        <TemplateColumn Context="table">
            <a class="btn btn-primary mx-2" href="@($"tables/edit?id={table.Id}")">Edit</a>
            <a class="btn btn-success mx-2" href="@($"tables/details?id={table.Id}")">Details</a>
            <a class="btn btn-danger mx-2" href="@($"tables/delete?id={table.Id}")">Delete</a>
        </TemplateColumn>
    </QuickGrid>
}



@code {
    Table4UContext context = default!;

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(1);
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
